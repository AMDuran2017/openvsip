/*
 * Copyright (c) 2003, 2007-8 Matteo Frigo
 * Copyright (c) 2003, 2007-8 Massachusetts Institute of Technology
 *
 * See the file COPYING for license information.
 *
 */
/* Generated by: ../../genfft/gen_twiddle_c -standalone -fma -reorder-insns -simd -compact -variables 100000 -include fftw-spu.h -trivial-stores -n 2 -name X(spu_t1fv_2) */

/*
 * This function contains 3 FP additions, 2 FP multiplications,
 * (or, 3 additions, 2 multiplications, 0 fused multiply/add),
 * 7 stack variables, 0 constants, and 4 memory accesses
 */
#include "fftw-spu.h"

void X(spu_t1fv_2) (R *ri, R *ii, const R *W, stride rs, INT mb, INT me, INT ms) {
     INT m;
     R *x;
     x = ri;
     for (m = mb, W = W + (mb * ((TWVL / VL) * 2)); m < me; m = m + VL, x = x + (VL * ms), W = W + (TWVL * 2), MAKE_VOLATILE_STRIDE(rs)) {
	  V T1, T3, T2, T5, T4;
	  T1 = LD(&(x[0]), ms, &(x[0]));
	  T2 = LD(&(x[WS(rs, 1)]), ms, &(x[WS(rs, 1)]));
	  T3 = BYTWJ(&(W[0]), T2);
	  T4 = VSUB(T1, T3);
	  T5 = VADD(T1, T3);
	  ST(&(x[WS(rs, 1)]), T4, ms, &(x[WS(rs, 1)]));
	  ST(&(x[0]), T5, ms, &(x[0]));
     }
}
